"use strict";(self.webpackChunkdocsite=self.webpackChunkdocsite||[]).push([[53],{1109:t=>{t.exports=JSON.parse('{"pluginId":"default","version":"current","label":"Next","banner":null,"badge":false,"noIndex":false,"className":"docs-version-current","isLast":true,"docsSidebars":{"tutorialSidebar":[{"type":"link","label":"Tutorial Intro","href":"/pulverization-framework/docs/intro","docId":"intro"},{"type":"category","label":"Pulverization concepts","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Core Architecture","href":"/pulverization-framework/docs/pulverization-concepts/core-architecture","docId":"pulverization-concepts/core-architecture"},{"type":"link","label":"Communication Architecture","href":"/pulverization-framework/docs/pulverization-concepts/communicator-architecture","docId":"pulverization-concepts/communicator-architecture"}],"href":"/pulverization-framework/docs/category/pulverization-concepts"},{"type":"category","label":"Tutorial - RabbitMQ platform","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Create Pulverized Components","href":"/pulverization-framework/docs/tutorial-rabbitmq-platform/create-components","docId":"tutorial-rabbitmq-platform/create-components"},{"type":"link","label":"Components Logic","href":"/pulverization-framework/docs/tutorial-rabbitmq-platform/components-logic","docId":"tutorial-rabbitmq-platform/components-logic"},{"type":"link","label":"Pulverization Configuration","href":"/pulverization-framework/docs/tutorial-rabbitmq-platform/create-configuration","docId":"tutorial-rabbitmq-platform/create-configuration"},{"type":"link","label":"Deployment","href":"/pulverization-framework/docs/tutorial-rabbitmq-platform/deployment","docId":"tutorial-rabbitmq-platform/deployment"}],"href":"/pulverization-framework/docs/category/tutorial---rabbitmq-platform"}]},"docs":{"intro":{"id":"intro","title":"Tutorial Intro","description":"Let\'s discover the Pulverization framework.","sidebar":"tutorialSidebar"},"pulverization-concepts/communicator-architecture":{"id":"pulverization-concepts/communicator-architecture","title":"Communication Architecture","description":"","sidebar":"tutorialSidebar"},"pulverization-concepts/core-architecture":{"id":"pulverization-concepts/core-architecture","title":"Core Architecture","description":"","sidebar":"tutorialSidebar"},"tutorial-rabbitmq-platform/components-logic":{"id":"tutorial-rabbitmq-platform/components-logic","title":"Components Logic","description":"Once all the pulverized components are defined, we need to specify the logic of a single component.","sidebar":"tutorialSidebar"},"tutorial-rabbitmq-platform/create-components":{"id":"tutorial-rabbitmq-platform/create-components","title":"Create Pulverized Components","description":"In this tutorial, we are going to create a simple pulverized application consisting of a device made up of the following","sidebar":"tutorialSidebar"},"tutorial-rabbitmq-platform/create-configuration":{"id":"tutorial-rabbitmq-platform/create-configuration","title":"Pulverization Configuration","description":"The pulverization framework gives a DSL to configure and declare all the logical device in the system and how they","sidebar":"tutorialSidebar"},"tutorial-rabbitmq-platform/deployment":{"id":"tutorial-rabbitmq-platform/deployment","title":"Deployment","description":"At this point, all the components and their corresponding logics are defined. The last step is to create an executable","sidebar":"tutorialSidebar"}}}')}}]);