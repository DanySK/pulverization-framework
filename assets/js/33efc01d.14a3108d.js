"use strict";(self.webpackChunkdocsite=self.webpackChunkdocsite||[]).push([[625],{3905:(e,t,n)=>{n.d(t,{Zo:()=>u,kt:()=>f});var r=n(7294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function a(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var c=r.createContext({}),p=function(e){var t=r.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):a(a({},t),e)),n},u=function(e){var t=p(e.components);return r.createElement(c.Provider,{value:t},e.children)},m={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},s=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,i=e.originalType,c=e.parentName,u=l(e,["components","mdxType","originalType","parentName"]),s=p(n),f=o,d=s["".concat(c,".").concat(f)]||s[f]||m[f]||i;return n?r.createElement(d,a(a({ref:t},u),{},{components:n})):r.createElement(d,a({ref:t},u))}));function f(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var i=n.length,a=new Array(i);a[0]=s;var l={};for(var c in t)hasOwnProperty.call(t,c)&&(l[c]=t[c]);l.originalType=e,l.mdxType="string"==typeof e?e:o,a[1]=l;for(var p=2;p<i;p++)a[p]=n[p];return r.createElement.apply(null,a)}return r.createElement.apply(null,n)}s.displayName="MDXCreateElement"},1643:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>a,default:()=>m,frontMatter:()=>i,metadata:()=>l,toc:()=>p});var r=n(7462),o=(n(7294),n(3905));const i={sidebar_position:3},a="Pulverization Configuration",l={unversionedId:"tutorial-rabbitmq-platform/create-configuration",id:"tutorial-rabbitmq-platform/create-configuration",title:"Pulverization Configuration",description:"The pulverization framework gives a DSL to configure and declare all the logical device in the system and how they",source:"@site/docs/tutorial-rabbitmq-platform/create-configuration.md",sourceDirName:"tutorial-rabbitmq-platform",slug:"/tutorial-rabbitmq-platform/create-configuration",permalink:"/pulverization-framework/docs/tutorial-rabbitmq-platform/create-configuration",draft:!1,editUrl:"https://github.com/nicolasfara/pulverization-framework/tree/master/docsite/docs/tutorial-rabbitmq-platform/create-configuration.md",tags:[],version:"current",sidebarPosition:3,frontMatter:{sidebar_position:3},sidebar:"tutorialSidebar",previous:{title:"Components Logic",permalink:"/pulverization-framework/docs/tutorial-rabbitmq-platform/components-logic"},next:{title:"Deployment",permalink:"/pulverization-framework/docs/tutorial-rabbitmq-platform/deployment"}},c={},p=[],u={toc:p};function m(e){let{components:t,...n}=e;return(0,o.kt)("wrapper",(0,r.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"pulverization-configuration"},"Pulverization Configuration"),(0,o.kt)("p",null,"The pulverization framework gives a DSL to configure and declare all the ",(0,o.kt)("strong",{parentName:"p"},"logical device")," in the system and how they\nare composed."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-kotlin"},'val configuration = pulverizationConfig {\n  logicalDevice("gps") {\n    // BehaviourComponent and StateComponent deployableOn Cloud\n    BehaviourComponent deployableOn Cloud\n    StateComponent deployableOn Cloud\n    CommunicationComponent deployableOn Edge\n    SensorsComponent deployableOn Device\n  }\n}\n')),(0,o.kt)("p",null,"The DSL gives the entry point ",(0,o.kt)("inlineCode",{parentName:"p"},"pulverizationConfig")," which gives you the ability to configure as many ",(0,o.kt)("strong",{parentName:"p"},"logical device"),"\nyou need in the system (in our example, only one device is specified)."),(0,o.kt)("p",null,"When configuring a ",(0,o.kt)("inlineCode",{parentName:"p"},"LogicalDevice"),', you must give a "name" to that specific configuration of a device.\nInside the ',(0,o.kt)("inlineCode",{parentName:"p"},"logicalDevice")," scope you can configure the specific components which will form a ",(0,o.kt)("strong",{parentName:"p"},"deployment unit")," and\nwhere that deployment unit will be deployed."))}m.isMDXComponent=!0}}]);